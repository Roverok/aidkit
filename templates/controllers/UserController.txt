<?php

class AdminUserController extends AidkitController{

	public function index()
	{
		$users = User::paginate(15);
		$this->layout->content = View::make('admin::users.index',compact('users'));
	}

	public function create()
	{
		$this->layout->content = View::make('admin::users.create');
	}

	public function store()
	{
		$insertArray = Input::all();
		$insertArray['password'] = Hash::make(Input::get('password'));
		$user = new User($insertArray);

		if($user->save()) return Redirect::route('admin.users.index');
		
		return Redirect::back()->withInput()->withErrors($user->errors);
	}

	public function show($id)
	{
		$user = User::findOrFail($id);
		$this->layout->content = View::make('admin::users.show',compact('user'));
	}

	public function edit($id)
	{
		$user = User::findOrFail($id);
		$this->layout->content = View::make('admin::users.edit',compact('user'));
	}

	public function update($id)
	{
		$user = User::findOrFail($id);

		$updateArray = Input::only('name','role');
		if(Input::get('username') != $user->username) $updateArray['username'] = Input::get('username');
		if(Input::get('email') != $user->email) $updateArray['email'] = Input::get('email');
		if(Input::has('new_password')) $updateArray['password'] = Hash::make(Input::get('username'));

		if ($user->update($updateArray)) return Redirect::routE('admin.users.show',$id);

		return Redirect::back()->withInput()->withErrors($user->errors);
	}

	public function destroy($id)
	{
		$user = User::findOrFail($id);
		$user->delete();

		return Redirect::route('admin.users.index');
	}
	
}